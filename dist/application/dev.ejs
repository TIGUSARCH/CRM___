<!DOCTYPE html>
<html lang="en">
  <!-- [Head] start -->

  <head>
    <title>Home </title>
    <!-- [Meta] -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=0, minimal-ui">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="description" content="Able Pro is trending dashboard template made using Bootstrap 5 design framework. Able Pro is available in Bootstrap, React, CodeIgniter, Angular,  and .net Technologies.">
    <meta name="keywords" content="Bootstrap admin template, Dashboard UI Kit, Dashboard Template, Backend Panel, react dashboard, angular dashboard">
    <meta name="author" content="Marco">

    <!-- [Favicon] icon -->
    <!-- <link rel="icon" href="../assets/images/favicon.svg" type="image/x-icon"> [Font] Family -->
<link rel="stylesheet" href="../assets/fonts/inter/inter.css" id="main-font-link" />
<!-- [Tabler Icons] https://tablericons.com -->
<link rel="stylesheet" href="../assets/fonts/tabler-icons.min.css" >
<!-- [Feather Icons] https://feathericons.com -->
<link rel="stylesheet" href="../assets/fonts/feather.css" >
<!-- [Font Awesome Icons] https://fontawesome.com/icons -->
<link rel="stylesheet" href="../assets/fonts/fontawesome.css" >
<!-- [Material Icons] https://fonts.google.com/icons -->
<link rel="stylesheet" href="../assets/fonts/material.css" >
<!-- [Template CSS Files] -->
<link rel="stylesheet" href="../assets/css/style.css" id="main-style-link" >
<link rel="stylesheet" href="../assets/css/style-preset.css" >
 <!-- FullCalendar CSS -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.10.2/fullcalendar.min.css">
<!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-14K1GBX9FG"></script>

<!-- <script>
  window.dataLayer = window.dataLayer || [];
  function gtag() {
    dataLayer.push(arguments);
  }
  gtag('js', new Date());

  gtag('config', 'G-14K1GBX9FG');
</script> -->
<!-- WiserNotify -->
<!-- <script>
  !(function () {
    if (window.t4hto4) console.log('WiserNotify pixel installed multiple time in this page');
    else {
      window.t4hto4 = !0;
      var t = document,
        e = window,
        n = function () {
          var e = t.createElement('script');
          (e.type = 'text/javascript'),
            (e.async = !0),
            (e.src = 'https://pt.wisernotify.com/pixel.js?ti=1jclj6jkfc4hhry'),
            document.body.appendChild(e);
        };
      'complete' === t.readyState ? n() : window.attachEvent ? e.attachEvent('onload', n) : e.addEventListener('load', n, !1);
    }
  })();
</script> -->
<!-- Microsoft clarity -->
<!-- <script type="text/javascript">
  (function (c, l, a, r, i, t, y) {
    c[a] =
      c[a] ||
      function () {
        (c[a].q = c[a].q || []).push(arguments);
      };
    t = l.createElement(r);
    t.async = 1;
    t.src = 'https://www.clarity.ms/tag/' + i;
    y = l.getElementsByTagName(r)[0];
    y.parentNode.insertBefore(t, y);
  })(window, document, 'clarity', 'script', 'gkn6wuhrtb');
</script> -->

  </head>
  <!-- [Head] end -->
  <!-- [Body] Start -->

  <body data-pc-preset="preset-1" data-pc-sidebar-caption="true" data-pc-direction="ltr" data-pc-theme_contrast="" data-pc-theme="light">
    <!-- [ Pre-loader ] start -->
<div class="loader-bg">
  <div class="loader-track">
    <div class="loader-fill"></div>
  </div>
</div>
<!-- [ Pre-loader ] End -->
 <!-- [ Sidebar Menu ] start -->
  
 
 <%- include('navbar')%> 


<!-- [ Sidebar Menu ] end --> <!-- [ Header Topbar ] start -->
<header class="pc-header">
  <div class="header-wrapper"> <!-- [Mobile Media Block] start -->
<div class="me-auto pc-mob-drp">
  <ul class="list-unstyled">
    <!-- ======= Menu collapse Icon ===== -->
    <li class="pc-h-item pc-sidebar-collapse">
      <a href="#" class="pc-head-link ms-0" id="sidebar-hide">
        <i class="ti ti-menu-2"></i>
      </a>
    </li>
    <li class="pc-h-item pc-sidebar-popup">
      <a href="#" class="pc-head-link ms-0" id="mobile-collapse">
        <i class="ti ti-menu-2"></i>
      </a>
    </li>
    <li class="dropdown pc-h-item">
      <a
        class="pc-head-link dropdown-toggle arrow-none m-0 trig-drp-search"
        data-bs-toggle="dropdown"
        href="#"
        role="button"
        aria-haspopup="false"
        aria-expanded="false"
      >
        <svg class="pc-icon">
          <use xlink:href="#custom-search-normal-1"></use>
        </svg>
      </a>
      <div class="dropdown-menu pc-h-dropdown drp-search">
        <form class="px-3 py-2">
          <input type="search" class="form-control border-0 shadow-none" placeholder="Busca aquÃ­. . ." />
        </form>
      </div>
    </li>
  </ul>
</div>
<!-- [Mobile Media Block end] -->
<div class="ms-auto">
  <ul class="list-unstyled">
    <li class="dropdown pc-h-item">
      <a
        class="pc-head-link dropdown-toggle arrow-none me-0"
        data-bs-toggle="dropdown"
        href="#"
        role="button"
        aria-haspopup="false"
        aria-expanded="false"
      >
        <svg class="pc-icon">
          <use xlink:href="#custom-sun-1"></use>
        </svg>
      </a>
      <div class="dropdown-menu dropdown-menu-end pc-h-dropdown">
        <a href="#!" class="dropdown-item" onclick="layout_change('dark')">
          <svg class="pc-icon">
            <use xlink:href="#custom-moon"></use>
          </svg>
          <span>Dark</span>
        </a>
        <a href="#!" class="dropdown-item" onclick="layout_change('light')">
          <svg class="pc-icon">
            <use xlink:href="#custom-sun-1"></use>
          </svg>
          <span>Light</span>
        </a>
        <a href="#!" class="dropdown-item" onclick="layout_change_default()">
          <svg class="pc-icon">
            <use xlink:href="#custom-setting-2"></use>
          </svg>
          <span>Default</span>
        </a>
      </div>
    </li>
    <li class="dropdown pc-h-item">
      <a
        class="pc-head-link dropdown-toggle arrow-none me-0"
        data-bs-toggle="dropdown"
        href="#"
        role="button"
        aria-haspopup="false"
        aria-expanded="false"
      >
        <svg class="pc-icon">
          <use xlink:href="#custom-setting-2"></use>
        </svg>
      </a>
      <div class="dropdown-menu dropdown-menu-end pc-h-dropdown">
        <a href="#!" class="dropdown-item">
          <i class="ti ti-user"></i>
          <span>My Account</span>
        </a>
        <a href="#!" class="dropdown-item">
          <i class="ti ti-settings"></i>
          <span>Settings</span>
        </a>
        <a href="#!" class="dropdown-item">
          <i class="ti ti-headset"></i>
          <span>Support</span>
        </a>
        <a href="#!" class="dropdown-item">
          <i class="ti ti-lock"></i>
          <span>Lock Screen</span>
        </a>
        <a href="#!" class="dropdown-item">
          <i class="ti ti-power"></i>
          <span>Logout</span>
        </a>
      </div>
    </li>
    <li class="pc-h-item">
      <a href="#" class="pc-head-link me-0" data-bs-toggle="offcanvas" data-bs-target="#announcement" aria-controls="announcement">
        <svg class="pc-icon">
          <use xlink:href="#custom-flash"></use>
        </svg>
      </a>
    </li>
    <li class="dropdown pc-h-item">
      <a
        class="pc-head-link dropdown-toggle arrow-none me-0"
        data-bs-toggle="dropdown"
        href="#"
        role="button"
        aria-haspopup="false"
        aria-expanded="false"
      >
        <svg class="pc-icon">
          <use xlink:href="#custom-notification"></use>
        </svg>
        <span class="badge bg-success pc-h-badge">3</span>
      </a>
      <div class="dropdown-menu dropdown-notification dropdown-menu-end pc-h-dropdown">
        <div class="dropdown-header d-flex align-items-center justify-content-between">
          <h5 class="m-0">Notifications</h5>
          <a href="#!" class="btn btn-link btn-sm">Mark all read</a>
        </div>
        <div class="dropdown-body text-wrap header-notification-scroll position-relative" style="max-height: calc(100vh - 215px)">
          <p class="text-span">Today</p>
          <div class="card mb-2">
            <div class="card-body">
              <div class="d-flex">
                <div class="flex-shrink-0">
                  <svg class="pc-icon text-primary">
                    <use xlink:href="#custom-layer"></use>
                  </svg>
                </div>
                <div class="flex-grow-1 ms-3">
                  <span class="float-end text-sm text-muted">2 min ago</span>
                  <h5 class="text-body mb-2">UI/UX Design</h5>
                  <p class="mb-0"
                    >Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of
                    type and scrambled it to make a type</p
                  >
                </div>
              </div>
            </div>
          </div>
          <div class="card mb-2">
            <div class="card-body">
              <div class="d-flex">
                <div class="flex-shrink-0">
                  <svg class="pc-icon text-primary">
                    <use xlink:href="#custom-sms"></use>
                  </svg>
                </div>
                <div class="flex-grow-1 ms-3">
                  <span class="float-end text-sm text-muted">1 hour ago</span>
                  <h5 class="text-body mb-2">Message</h5>
                  <p class="mb-0">Lorem Ipsum has been the industry's standard dummy text ever since the 1500.</p>
                </div>
              </div>
            </div>
          </div>
          <p class="text-span">Yesterday</p>
          <div class="card mb-2">
            <div class="card-body">
              <div class="d-flex">
                <div class="flex-shrink-0">
                  <svg class="pc-icon text-primary">
                    <use xlink:href="#custom-document-text"></use>
                  </svg>
                </div>
                <div class="flex-grow-1 ms-3">
                  <span class="float-end text-sm text-muted">2 hour ago</span>
                  <h5 class="text-body mb-2">Forms</h5>
                  <p class="mb-0"
                    >Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of
                    type and scrambled it to make a type</p
                  >
                </div>
              </div>
            </div>
          </div>
          <div class="card mb-2">
            <div class="card-body">
              <div class="d-flex">
                <div class="flex-shrink-0">
                  <svg class="pc-icon text-primary">
                    <use xlink:href="#custom-user-bold"></use>
                  </svg>
                </div>
                <div class="flex-grow-1 ms-3">
                  <span class="float-end text-sm text-muted">12 hour ago</span>
                  <h5 class="text-body mb-2">Challenge invitation</h5>
                  <p class="mb-2"><span class="text-dark">Jonny aber</span> invites to join the challenge</p>
                  <button class="btn btn-sm btn-outline-secondary me-2">Decline</button>
                  <button class="btn btn-sm btn-primary">Accept</button>
                </div>
              </div>
            </div>
          </div>
          <div class="card mb-2">
            <div class="card-body">
              <div class="d-flex">
                <div class="flex-shrink-0">
                  <svg class="pc-icon text-primary">
                    <use xlink:href="#custom-security-safe"></use>
                  </svg>
                </div>
                <div class="flex-grow-1 ms-3">
                  <span class="float-end text-sm text-muted">5 hour ago</span>
                  <h5 class="text-body mb-2">Security</h5>
                  <p class="mb-0"
                    >Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of
                    type and scrambled it to make a type</p
                  >
                </div>
              </div>
            </div>
          </div>
        </div>
        <div class="text-center py-2">
          <a href="#!" class="link-danger">Clear all Notifications</a>
        </div>
      </div>
    </li>
    <li class="dropdown pc-h-item header-user-profile">
      <a
        class="pc-head-link dropdown-toggle arrow-none me-0"
        data-bs-toggle="dropdown"
        href="#"
        role="button"
        aria-haspopup="false"
        data-bs-auto-close="outside"
        aria-expanded="false"
      >
        <!-- <img src="../assets/images/user/avatar-2.jpg" alt="user-image" class="user-avtar" /> -->
      </a>
      <div class="dropdown-menu dropdown-user-profile dropdown-menu-end pc-h-dropdown">
        <div class="dropdown-header d-flex align-items-center justify-content-between">
          <h5 class="m-0">Profile</h5>
        </div>
        <div class="dropdown-body">
          <div class="profile-notification-scroll position-relative" style="max-height: calc(100vh - 225px)">
            <div class="d-flex mb-1">
              <div class="flex-shrink-0">
                <img src="../assets/images/user/avatar-2.jpg" alt="user-image" class="user-avtar wid-35" />
              </div>
              <div class="flex-grow-1 ms-3">
                <h6 class="mb-1">Carson Darrin ð</h6>
                <span>carson.darrin@company.io</span>
              </div>
            </div>
            <hr class="border-secondary border-opacity-50" />
            <div class="card">
              <div class="card-body py-3">
                <div class="d-flex align-items-center justify-content-between">
                  <h5 class="mb-0 d-inline-flex align-items-center"
                    ><svg class="pc-icon text-muted me-2">
                      <use xlink:href="#custom-notification-outline"></use></svg
                    >Notification</h5
                  >
                  <div class="form-check form-switch form-check-reverse m-0">
                    <input class="form-check-input f-18" type="checkbox" role="switch" />
                  </div>
                </div>
              </div>
            </div>
            <p class="text-span">Manage</p>
            <a href="#" class="dropdown-item">
              <span>
                <svg class="pc-icon text-muted me-2">
                  <use xlink:href="#custom-setting-outline"></use>
                </svg>
                <span>Settings</span>
              </span>
            </a>
            <a href="#" class="dropdown-item">
              <span>
                <svg class="pc-icon text-muted me-2">
                  <use xlink:href="#custom-share-bold"></use>
                </svg>
                <span>Share</span>
              </span>
            </a>
            <a href="#" class="dropdown-item">
              <span>
                <svg class="pc-icon text-muted me-2">
                  <use xlink:href="#custom-lock-outline"></use>
                </svg>
                <span>Change Password</span>
              </span>
            </a>
            <hr class="border-secondary border-opacity-50" />
            <p class="text-span">Team</p>
            <a href="#" class="dropdown-item">
              <span>
                <svg class="pc-icon text-muted me-2">
                  <use xlink:href="#custom-profile-2user-outline"></use>
                </svg>
                <span>UI Design team</span>
              </span>
              <div class="user-group">
                <img src="../assets/images/user/avatar-1.jpg" alt="user-image" class="avtar" />
                <span class="avtar bg-danger text-white">K</span>
                <span class="avtar bg-success text-white">
                  <svg class="pc-icon m-0">
                    <use xlink:href="#custom-user"></use>
                  </svg>
                </span>
                <span class="avtar bg-light-primary text-primary">+2</span>
              </div>
            </a>
            <a href="#" class="dropdown-item">
              <span>
                <svg class="pc-icon text-muted me-2">
                  <use xlink:href="#custom-profile-2user-outline"></use>
                </svg>
                <span>Friends Groups</span>
              </span>
              <div class="user-group">
                <img src="../assets/images/user/avatar-1.jpg" alt="user-image" class="avtar" />
                <span class="avtar bg-danger text-white">K</span>
                <span class="avtar bg-success text-white">
                  <svg class="pc-icon m-0">
                    <use xlink:href="#custom-user"></use>
                  </svg>
                </span>
              </div>
            </a>
            <a href="#" class="dropdown-item">
              <span>
                <svg class="pc-icon text-muted me-2">
                  <use xlink:href="#custom-add-outline"></use>
                </svg>
                <span>Add new</span>
              </span>
              <div class="user-group">
                <span class="avtar bg-primary text-white">
                  <svg class="pc-icon m-0">
                    <use xlink:href="#custom-add-outline"></use>
                  </svg>
                </span>
              </div>
            </a>
            <hr class="border-secondary border-opacity-50" />
            <div class="d-grid mb-3">
              <button class="btn btn-primary">
                <svg class="pc-icon me-2">
                  <use xlink:href="#custom-logout-1-outline"></use></svg
                >Logout
              </button>
            </div>
            <div
              class="card border-0 shadow-none drp-upgrade-card mb-0"
              style="background-image: url(../assets/images/layout/img-profile-card.jpg)"
            >
              <div class="card-body">
                <div class="user-group">
                  <img src="../assets/images/user/avatar-1.jpg" alt="user-image" class="avtar" />
                  <img src="../assets/images/user/avatar-2.jpg" alt="user-image" class="avtar" />
                  <img src="../assets/images/user/avatar-3.jpg" alt="user-image" class="avtar" />
                  <img src="../assets/images/user/avatar-4.jpg" alt="user-image" class="avtar" />
                  <img src="../assets/images/user/avatar-5.jpg" alt="user-image" class="avtar" />
                  <span class="avtar bg-light-primary text-primary">+20</span>
                </div>
                <h3 class="my-3 text-dark">245.3k <small class="text-muted">Followers</small></h3>
                <div class="btn btn btn-warning">
                  <svg class="pc-icon me-2">
                    <use xlink:href="#custom-logout-1-outline"></use>
                  </svg>
                  Upgrade to Business
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </li>
  </ul>
</div>
 </div>
</header>
<div class="offcanvas pc-announcement-offcanvas offcanvas-end" tabindex="-1" id="announcement" aria-labelledby="announcementLabel">
  <div class="offcanvas-header">
    <h5 class="offcanvas-title" id="announcementLabel">What's new announcement?</h5>
    <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
  </div>
  <div class="offcanvas-body">
    <p class="text-span">Today</p>
    <div class="card mb-3">
      <div class="card-body">
        <div class="align-items-center d-flex flex-wrap gap-2 mb-3">
          <div class="badge bg-light-success f-12">Big News</div>
          <p class="mb-0 text-muted">2 min ago</p>
          <span class="badge dot bg-warning"></span>
        </div>
        <h5 class="mb-3">Able Pro is Redesigned</h5>
        <p class="text-muted">Able Pro is completely renowed with high aesthetics User Interface.</p>
        <img src="../assets/images/layout/img-announcement-1.png" alt="img" class="img-fluid mb-3" />
        <div class="row">
          <div class="col-12">
            <div class="d-grid"
              ><a
                class="btn btn-outline-secondary"
                href="https://1.envato.market/c/1289604/275988/4415?subId1=phoenixcoded&u=https%3A%2F%2Fthemeforest.net%2Fitem%2Fable-pro-responsive-bootstrap-4-admin-template%2F19300403"
                target="_blank"
                >Check Now</a
              ></div
            >
          </div>
        </div>
      </div>
    </div>
    <div class="card mb-3">
      <div class="card-body">
        <div class="align-items-center d-flex flex-wrap gap-2 mb-3">
          <div class="badge bg-light-warning f-12">Offer</div>
          <p class="mb-0 text-muted">2 hour ago</p>
          <span class="badge dot bg-warning"></span>
        </div>
        <h5 class="mb-3">Able Pro is in best offer price</h5>
        <p class="text-muted">Download Able Pro exclusive on themeforest with best price. </p>
        <a
          href="https://1.envato.market/c/1289604/275988/4415?subId1=phoenixcoded&u=https%3A%2F%2Fthemeforest.net%2Fitem%2Fable-pro-responsive-bootstrap-4-admin-template%2F19300403"
          target="_blank"
          ><img src="../assets/images/layout/img-announcement-2.png" alt="img" class="img-fluid"
        /></a>
      </div>
    </div>

    <p class="text-span mt-4">Yesterday</p>
    <div class="card mb-3">
      <div class="card-body">
        <div class="align-items-center d-flex flex-wrap gap-2 mb-3">
          <div class="badge bg-light-primary f-12">Blog</div>
          <p class="mb-0 text-muted">12 hour ago</p>
          <span class="badge dot bg-warning"></span>
        </div>
        <h5 class="mb-3">Featured Dashboard Template</h5>
        <p class="text-muted">Do you know Able Pro is one of the featured dashboard template selected by Themeforest team.?</p>
        <img src="../assets/images/layout/img-announcement-3.png" alt="img" class="img-fluid" />
      </div>
    </div>
    <div class="card mb-3">
      <div class="card-body">
        <div class="align-items-center d-flex flex-wrap gap-2 mb-3">
          <div class="badge bg-light-primary f-12">Announcement</div>
          <p class="mb-0 text-muted">12 hour ago</p>
          <span class="badge dot bg-warning"></span>
        </div>
        <h5 class="mb-3">Buy Once - Get Free Updated lifetime</h5>
        <p class="text-muted">Get the lifetime free updates once you purchase the Able Pro.</p>
        <img src="../assets/images/layout/img-announcement-4.png" alt="img" class="img-fluid" />
      </div>
    </div>
  </div>
</div>
<!-- [ Header ] end -->



    <!-- [ Main Content ] start -->
    <div class="pc-container">
      <div class="pc-content">
        <!-- [ breadcrumb ] start -->
        <div class="page-header">
          <div class="page-block">
            <div class="row align-items-center">
              <div class="col-md-12">
                <ul class="breadcrumb">
                  <li class="breadcrumb-item"><a href="../dashboard">Home</a></li>
                  <li class="breadcrumb-item"><a href="javascript: void(0)">Dashboard</a></li>
                  <li class="breadcrumb-item" aria-current="page">GestiÃ³n de eventos</li>
                </ul>
              </div>
              <div class="col-md-12">
                <div class="page-header-title">
                  <h2 class="mb-0">GestiÃ³n de eventos</h2>
                </div>
              </div>
            </div>
          </div>
        </div>
        <!-- [ breadcrumb ] end -->
        <style>
          /* Estilos generales */
        .card {
            border: none;
            border-radius: 8px;
        }

        .card-body {
            padding: 10px;
        }

        .card-footer {
            border-top: none;
        }

        .nav-tabs .nav-link {
            border: none;
        }

        .nav-tabs .nav-link.active {
            border: none;
        }

        .dropdown-menu {
            border: none;
        }

        .dropdown-item {
            border: none;
        }

        /* Estilos para el Timeline */
        .timeline-container {
            padding: 20px;
            margin-top: 20px;
            position: relative;
        }

        .timeline {
            display: flex;
            flex-direction: column;
            gap: 18px;
            position: relative;
        }

        .timeline::before {
            content: '';
            position: absolute;
            left: 50px;
            width: 2px;
            background-color: #ccc; /* LÃ­nea del cronograma */
            top: 0;
            bottom: 0;
        }

        .timeline-item {
            position: relative;
            padding-left: 90px;
        }

        .timeline-date {
            position: absolute;
            left: 0;
            top: 0;
            font-size: 0.9em;
            text-align: right;
            width: 70px;
            margin-top: 5px;
        }

        .timeline-item::before {
            content: '';
            position: absolute;
            left: 40px;
            top: 10px;
            width: 12px;
            height: 12px;
            border-radius: 50%;
            
        }

        .timeline-content {
            display: flex;
            align-items: center;
            padding: 10px;
            border-radius: 4px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            
        }

        .event-checkbox {
            margin-right: 10px;
        }

        .event-details {
            flex: 1;
        }

        .event-details h5 {
            margin: 0;
        }

        .event-details p {
            margin: 5px 0 0;
        }

        </style>
        <!-- [ Main Content ] start -->
        <div class="row">





            <!-- [ SecciÃ³n de Tareas ] -->

            <div class="col-lg-12">
              <div class="card shadow-sm">
                <div class="card-body pb-0">
                  <!-- Encabezado con opciones de filtro dropdown -->
                  <div class="d-flex justify-content-between align-items-center mb-3">
                    <h5 class="mb-0">GestiÃ³n de Tareas</h5>
                    <div class="dropdown">
                      <a class="btn btn-light dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        Filtrar Usuarios
                      </a>
                      <div class="dropdown-menu dropdown-menu-end" id="dropdownUsuarios">
                        <!-- Los usuarios se cargarÃ¡n aquÃ­ dinÃ¡micamente -->
                      </div>
                    </div>
                    
                    
                  </div>
                  <!-- PestaÃ±as para filtrar tareas -->
                  <ul class="nav nav-tabs analytics-tab" id="pestanasTareas" role="tablist">
                    <li class="nav-item" role="presentation">
                      <button class="nav-link active" id="pestanas-tarea-todas" data-bs-toggle="tab" data-bs-target="#contenido-tarea-todas" type="button" role="tab" aria-controls="contenido-tarea-todas" aria-selected="true">Atrasada</button>
                    </li>
                    <li class="nav-item" role="presentation">
                      <button class="nav-link" id="pestanas-tarea-hoy" data-bs-toggle="tab" data-bs-target="#contenido-tarea-hoy" type="button" role="tab" aria-controls="contenido-tarea-hoy" aria-selected="false">Hoy</button>
                    </li>
                    <li class="nav-item" role="presentation">
                      <button class="nav-link" id="pestanas-tarea-semana" data-bs-toggle="tab" data-bs-target="#contenido-tarea-semana" type="button" role="tab" aria-controls="contenido-tarea-semana" aria-selected="false">Esta Semana</button>
                    </li>
                    <li class="nav-item" role="presentation">
                      <button class="nav-link" id="pestanas-tarea-mes" data-bs-toggle="tab" data-bs-target="#contenido-tarea-mes" type="button" role="tab" aria-controls="contenido-tarea-mes" aria-selected="false">Este Mes</button>
                    </li>
                  </ul>
                </div>
                <!-- Contenido de las pestaÃ±as -->
                <div class="tab-content p-3" id="contenidoTareas">
                  <div class="tab-pane fade show active" id="contenido-tarea-todas" role="tabpanel" aria-labelledby="pestanas-tarea-todas">
                    <div class="table-responsive">
                      <table class="table">
                        <thead class="thead-light">
                        <tr>
                          <th scope="col" class="text-center">Completada</th>
                          <th scope="col">Tarea</th>
                          <th scope="col">Fecha de Vencimiento</th>
                          <th scope="col">Estado</th>
                          <th scope="col">Asignado a</th>
                          <th scope="col" class="text-center">Acciones</th>
                        </tr>
                        </thead>
                        <tbody id="lista-tareas-atrasada">
                        <!-- Las tareas atrasadas se agregarÃ¡n aquÃ­ dinÃ¡micamente -->
                        </tbody>
                      </table>
                    </div>
                  </div>
                  <div class="tab-pane fade" id="contenido-tarea-hoy" role="tabpanel" aria-labelledby="pestanas-tarea-hoy">
                    <div class="table-responsive">
                      <table class="table">
                        <thead class="thead-light">
                        <tr>
                          <th scope="col" class="text-center">Completada</th>
                          <th scope="col">Tarea</th>
                          <th scope="col">Fecha de Vencimiento</th>
                          <th scope="col">Estado</th>
                          <th scope="col">Asignado a</th>
                          <th scope="col" class="text-center">Acciones</th>
                        </tr>
                        </thead>
                        <tbody id="lista-tareas-hoy">
                        <!-- Las tareas de hoy se agregarÃ¡n aquÃ­ dinÃ¡micamente -->
                        </tbody>
                      </table>
                    </div>
                  </div>
                  <div class="tab-pane fade" id="contenido-tarea-semana" role="tabpanel" aria-labelledby="pestanas-tarea-semana">
                    <div class="table-responsive">
                      <table class="table">
                        <thead class="thead-light">
                        <tr>
                          <th scope="col" class="text-center">Completada</th>
                          <th scope="col">Tarea</th>
                          <th scope="col">Fecha de Vencimiento</th>
                          <th scope="col">Estado</th>
                          <th scope="col">Asignado a</th>
                          <th scope="col" class="text-center">Acciones</th>
                        </tr>
                        </thead>
                        <tbody id="lista-tareas-semana">
                        <!-- Las tareas de esta semana se agregarÃ¡n aquÃ­ dinÃ¡micamente -->
                        </tbody>
                      </table>
                    </div>
                  </div>
                  <div class="tab-pane fade" id="contenido-tarea-mes" role="tabpanel" aria-labelledby="pestanas-tarea-mes">
                    <div class="table-responsive">
                      <table class="table">
                        <thead class="thead-light">
                        <tr>
                          <th scope="col" class="text-center">Completada</th>
                          <th scope="col">Tarea</th>
                          <th scope="col">Fecha de Vencimiento</th>
                          <th scope="col">Estado</th>
                          <th scope="col">Asignado a</th>
                          <th scope="col" class="text-center">Acciones</th>
                        </tr>
                        </thead>
                        <tbody id="lista-tareas-mes">
                        <!-- Las tareas de este mes se agregarÃ¡n aquÃ­ dinÃ¡micamente -->
                        </tbody>
                      </table>
                    </div>
                  </div>
                </div>
                <!-- Pie de tarjeta para acciones -->
                <div class="card-footer text-end">
                  <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#modalCrearTarea">
                    + Nueva Tarea
                  </button>
                </div>
              </div>
            </div>


            <!-- Modal para ver detalles de la tarea -->
            <div class="modal fade" id="modalDetallesTarea" tabindex="-1" aria-labelledby="modalDetallesTareaLabel" aria-hidden="true">
              <div class="modal-dialog modal-dialog-centered modal-lg">
                <div class="modal-content">
                  <div class="modal-header">
                    <h5 class="modal-title" id="modalDetallesTareaLabel">Detalles de la Tarea</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
                  </div>
                  <div class="modal-body">
                    <p><strong>Nombre:</strong> <span id="detalles-tarea-nombre"></span></p>
                    <p><strong>Fecha de Vencimiento:</strong> <span id="detalles-tarea-fecha-vencimiento"></span></p>
                    <p><strong>Estado:</strong> <span id="detalles-tarea-estado"></span></p>
                    <p><strong>Asignado a:</strong> <span id="detalles-tarea-asignado-a"></span></p>
                    <p><strong>DescripciÃ³n:</strong> <span id="detalles-tarea-descripcion"></span></p>
                  </div>
                  <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
                  </div>
                </div>
              </div>
            </div>

            <!-- Modal para editar detalles de la tarea -->
            <div class="modal fade" id="modalEditarTarea" tabindex="-1" aria-labelledby="modalEditarTareaLabel" aria-hidden="true">
              <div class="modal-dialog modal-dialog-centered modal-lg">
                <div class="modal-content">
                  <div class="modal-header">
                    <h5 class="modal-title" id="modalEditarTareaLabel">Editar Tarea</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
                  </div>
                  <div class="modal-body">
                    <form id="formEditarTarea">
                      <div class="mb-3">
                        <label for="editar-tarea-nombre" class="form-label">Nombre</label>
                        <input type="text" class="form-control" id="editar-tarea-nombre" name="nombre" required>
                      </div>
                      <div class="mb-3">
                        <label for="editar-tarea-fecha-vencimiento" class="form-label">Fecha de Vencimiento</label>
                        <input type="date" class="form-control" id="editar-tarea-fecha-vencimiento" name="fechaVencimiento" required>
                      </div>
                      <div class="mb-3">
                        <label for="editar-tarea-estado" class="form-label">Estado</label>
                        <select class="form-control" id="editar-tarea-estado" name="estado" required>
                          <option value="pendiente">Pendiente</option>
                          <option value="completada">Completada</option>
                        </select>
                      </div>
                      <div class="mb-3">
                        <label for="editar-tarea-asignado-a" class="form-label">Asignado a</label>
                        <select class="form-control" id="editar-tarea-asignado-a" name="usuarioId" required>
                          <!-- Los usuarios se cargarÃ¡n dinÃ¡micamente aquÃ­ -->
                        </select>
                      </div>
                      <div class="mb-3">
                        <label for="editar-tarea-descripcion" class="form-label">DescripciÃ³n</label>
                        <textarea class="form-control" id="editar-tarea-descripcion" name="descripcion" rows="3"></textarea>
                      </div>
                      <input type="hidden" id="editar-tarea-id">
                    </form>
                  </div>
                  <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                    <button type="button" class="btn btn-primary" id="guardarCambiosEditarTarea">Guardar Cambios</button>
                  </div>
                </div>
              </div>
            </div>

            <!-- Modal para crear nueva tarea -->
            <div class="modal fade" id="modalCrearTarea" tabindex="-1" aria-labelledby="modalCrearTareaLabel" aria-hidden="true">
              <div class="modal-dialog modal-dialog-centered modal-lg">
                <div class="modal-content">
                  <div class="modal-header">
                    <h5 class="modal-title" id="modalCrearTareaLabel">Crear Nueva Tarea</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
                  </div>
                  <div class="modal-body">
                    <form id="formCrearTarea">
                      <div class="mb-3">
                        <label for="crear-tarea-nombre" class="form-label">Nombre</label>
                        <input type="text" class="form-control" id="crear-tarea-nombre" name="nombre" required>
                      </div>
                      <div class="mb-3">
                        <label for="crear-tarea-fecha-vencimiento" class="form-label">Fecha de Vencimiento</label>
                        <input type="date" class="form-control" id="crear-tarea-fecha-vencimiento" name="fechaVencimiento" required>
                      </div>
                      <div class="mb-3">
                        <label for="crear-tarea-estado" class="form-label">Estado</label>
                        <select class="form-control" id="crear-tarea-estado" name="estado" required>
                          <option value="pendiente">Pendiente</option>
                          <option value="completada">Completada</option>
                        </select>
                      </div>
                      <div class="mb-3">
                        <label for="crear-tarea-asignado-a" class="form-label">Asignado a</label>
                        <select class="form-control" id="crear-tarea-asignado-a" name="usuarioId" required>
                          <!-- Los usuarios se cargarÃ¡n dinÃ¡micamente aquÃ­ -->
                        </select>
                      </div>
                      <div class="mb-3">
                        <label for="crear-tarea-descripcion" class="form-label">DescripciÃ³n</label>
                        <textarea class="form-control" id="crear-tarea-descripcion" name="descripcion" rows="3"></textarea>
                      </div>
                    </form>
                  </div>
                  <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" id="cancelarCrearTarea">Cancelar</button>
                    <button type="button" class="btn btn-primary" id="botonCrearTarea">Crear Tarea</button>
                  </div>
                </div>
              </div>
            </div>


      
            <script src="/socket.io/socket.io.js"></script>
            <script src="../main.js"></script>
            <!-- script estable -->
            <script>
              document.addEventListener('DOMContentLoaded', (event) => {
                const socket = io();
              
                let usuarioSeleccionado = null;
              
                // FunciÃ³n para unirse a la sala del usuario
                const unirseASalaDeUsuario = (usuarioId) => {
                  socket.emit('joinUserRoom', usuarioId);
                };
              
                // FunciÃ³n para salirse de la sala del usuario
                const salirDeSalaDeUsuario = (usuarioId) => {
                  socket.emit('leaveUserRoom', usuarioId);
                };
              
                // FunciÃ³n para cargar usuarios en el dropdown
                const cargarUsuariosEnDropdown = async () => {
                  try {
                    const usuariosResponse = await fetch('/usuarios');
                    if (usuariosResponse.ok) {
                      const usuarios = await usuariosResponse.json();
                      const dropdownUsuarios = document.getElementById('dropdownUsuarios');
                      dropdownUsuarios.innerHTML = '';
              
                      if (Array.isArray(usuarios.data)) {
                        usuarios.data.forEach(usuario => {
                          const checkboxItem = document.createElement('div');
                          checkboxItem.classList.add('dropdown-item');
                          checkboxItem.innerHTML = `
                            <input type="checkbox" class="form-check-input usuario-checkbox" value="${usuario.id}" id="usuario-${usuario.id}">
                            <label class="form-check-label" for="usuario-${usuario.id}">${usuario.nombre} ${usuario.apellidoPaterno} ${usuario.apellidoMaterno}</label>
                          `;
                          dropdownUsuarios.appendChild(checkboxItem);
                        });
              
                        // Event listener para los checkboxes
                        document.querySelectorAll('.usuario-checkbox').forEach(checkbox => {
                          checkbox.addEventListener('change', filtrarTareasPorUsuario);
                        });
                      } else {
                        console.error('La respuesta de usuarios no es un arreglo:', usuarios.data);
                      }
                    } else {
                      console.error('Error al obtener usuarios:', usuariosResponse.statusText);
                    }
                  } catch (error) {
                    console.error('Error al obtener usuarios:', error);
                  }
                };
              
                // FunciÃ³n para filtrar tareas por usuarios seleccionados
                const filtrarTareasPorUsuario = () => {
                  const usuariosSeleccionados = Array.from(document.querySelectorAll('.usuario-checkbox:checked')).map(checkbox => checkbox.value);
              
                  if (usuariosSeleccionados.length === 1) {
                    const nuevoUsuarioSeleccionado = usuariosSeleccionados[0];
                    if (usuarioSeleccionado !== nuevoUsuarioSeleccionado) {
                      if (usuarioSeleccionado) {
                        salirDeSalaDeUsuario(usuarioSeleccionado);
                      }
                      usuarioSeleccionado = nuevoUsuarioSeleccionado;
                      unirseASalaDeUsuario(usuarioSeleccionado);
                    }
                  } else {
                    if (usuarioSeleccionado) {
                      salirDeSalaDeUsuario(usuarioSeleccionado);
                    }
                    usuarioSeleccionado = null;
                  }
              
                  fetch('/tareas')
                    .then(response => response.json())
                    .then(tareas => {
                      limpiarListasTareas();
                      tareas.forEach(tarea => {
                        if (usuariosSeleccionados.length === 0 || usuariosSeleccionados.includes(tarea.usuarioId)) {
                          renderizarTarea(tarea);
                        }
                      });
                    })
                    .catch(error => {
                      console.error('Error al cargar las tareas:', error);
                    });
                };
              
              
                // Llama a cargarUsuariosEnDropdown para llenar el dropdown al cargar la pÃ¡gina
                cargarUsuariosEnDropdown();
              
                // Resto del cÃ³digo existente...
                const formatearFecha = (cadenaFecha) => {
                  const opciones = { year: 'numeric', month: 'long', day: 'numeric' };
                  return new Date(cadenaFecha).toLocaleDateString('es-MX', opciones);
                };
              
                const obtenerPestanaTarea = (tarea) => {
                  const ahora = new Date();
                  const fechaVencimiento = new Date(tarea.fechaVencimiento);
              
                  if (fechaVencimiento < ahora && fechaVencimiento.toDateString() !== ahora.toDateString()) {
                    return 'atrasada';
                  } else if (fechaVencimiento.toDateString() === ahora.toDateString()) {
                    return 'hoy';
                  } else if (fechaVencimiento > ahora && fechaVencimiento < new Date(ahora.getTime() + 7 * 24 * 60 * 60 * 1000)) {
                    return 'semana';
                  } else if (fechaVencimiento.getMonth() === ahora.getMonth()) {
                    return 'mes';
                  } else {
                    return 'otras';
                  }
                };
              
                const obtenerClaseEstado = (estado) => {
                  switch (estado) {
                    case 'pendiente':
                      return 'badge bg-light-warning rounded-pill f-12';
                    case 'completada':
                      return 'badge bg-light-success rounded-pill f-12';
                    default:
                      return 'badge bg-light-secondary rounded-pill f-12';
                  }
                };
              
                const renderizarTarea = (tarea) => {
                  const usuario = tarea.Usuario ? `${tarea.Usuario.nombre} ${tarea.Usuario.apellidoPaterno} ${tarea.Usuario.apellidoMaterno}` : 'Desconocido';
                  const fila = document.createElement('tr');
                  fila.setAttribute('data-id', tarea.id);
                  fila.innerHTML = `
                    <td class="text-center">
                      <input type="checkbox" id="tarea-${tarea.id}" class="form-check-input">
                    </td>
                    <td><a href="#" class="detalle-tarea-enlace" data-task-id="${tarea.id}">${tarea.nombre}</a></td>
                    <td>${formatearFecha(tarea.fechaVencimiento)}</td>
                    <td><span class="${obtenerClaseEstado(tarea.estado)}">${tarea.estado}</span></td>
                    <td>${usuario}</td>
                    <td class="text-center">
                      <ul class="list-inline mb-0">
                        <li class="list-inline-item" data-bs-toggle="tooltip" title="Ver">
                          <a href="#" class="avtar avtar-xs btn-link-secondary btn-pc-default detalle-tarea-enlace" data-task-id="${tarea.id}">
                            <i class="ti ti-eye f-18"></i>
                          </a>
                        </li>
                        <li class="list-inline-item" data-bs-toggle="tooltip" title="Editar">
                          <a href="#" class="avtar avtar-xs btn-link-success btn-pc-default editar-tarea-enlace" data-task-id="${tarea.id}">
                            <i class="ti ti-edit-circle f-18"></i>
                          </a>
                        </li>
                        <li class="list-inline-item" data-bs-toggle="tooltip" title="Eliminar">
                          <a href="#" class="avtar avtar-xs btn-link-danger btn-pc-default eliminar-tarea" data-task-id="${tarea.id}">
                            <i class="ti ti-trash f-18"></i>
                          </a>
                        </li>
                      </ul>
                    </td>
                  `;
                  const pestana = obtenerPestanaTarea(tarea);
                  document.getElementById(`lista-tareas-${pestana}`).appendChild(fila);
              
                  fila.querySelectorAll('.detalle-tarea-enlace').forEach(element => {
                    element.addEventListener('click', (e) => {
                      e.preventDefault();
                      mostrarDetallesTarea(tarea);
                    });
                  });
              
                  fila.querySelector('.editar-tarea-enlace').addEventListener('click', async (e) => {
                    e.preventDefault();
                    await mostrarEditarTarea(tarea);
                  });
              
                  fila.querySelector('.eliminar-tarea').addEventListener('click', (e) => {
                    e.preventDefault();
                    if (confirm('Â¿EstÃ¡s seguro de que deseas eliminar esta tarea?')) {
                      fetch(`/tareas/${tarea.id}`, { method: 'DELETE' })
                        .then(response => {
                          if (response.ok) {
                            socket.emit('obtenerTareas');
                          } else {
                            alert('Error al eliminar la tarea.');
                          }
                        })
                        .catch(error => {
                          console.error('Error al eliminar la tarea:', error);
                        });
                    }
                  });
                };
              
                const mostrarDetallesTarea = (tarea) => {
                  document.getElementById('detalles-tarea-nombre').textContent = tarea.nombre;
                  document.getElementById('detalles-tarea-fecha-vencimiento').textContent = formatearFecha(tarea.fechaVencimiento);
                  document.getElementById('detalles-tarea-estado').textContent = tarea.estado;
                  const usuario = tarea.Usuario ? `${tarea.Usuario.nombre} ${tarea.Usuario.apellidoPaterno} ${tarea.Usuario.apellidoMaterno}` : 'Desconocido';
                  document.getElementById('detalles-tarea-asignado-a').textContent = usuario;
                  document.getElementById('detalles-tarea-descripcion').textContent = tarea.descripcion || '';
              
                  const detallesTareaModal = new bootstrap.Modal(document.getElementById('modalDetallesTarea'));
                  detallesTareaModal.show();
                };
              
                const cargarUsuariosEnSelect = async (selectElementId) => {
                  const usuariosResponse = await obtenerUsuarios();
                  const usuarios = usuariosResponse.data; // Asegurarnos de obtener la propiedad data
                  const select = document.getElementById(selectElementId);
                  select.innerHTML = '';
              
                  if (Array.isArray(usuarios)) {
                    usuarios.forEach(usuario => {
                      const option = document.createElement('option');
                      option.value = usuario.id;
                      option.textContent = `${usuario.nombre} ${usuario.apellidoPaterno} ${usuario.apellidoMaterno}`;
                      select.appendChild(option);
                    });
                  } else {
                    console.error('La respuesta de usuarios no es un arreglo:', usuarios);
                  }
                };
              
                const mostrarEditarTarea = async (tarea) => {
                  await cargarUsuariosEnSelect('editar-tarea-asignado-a');
              
                  document.getElementById('editar-tarea-nombre').value = tarea.nombre;
                  document.getElementById('editar-tarea-fecha-vencimiento').value = tarea.fechaVencimiento.split('T')[0];
                  document.getElementById('editar-tarea-estado').value = tarea.estado;
                  document.getElementById('editar-tarea-descripcion').value = tarea.descripcion || '';
                  document.getElementById('editar-tarea-id').value = tarea.id;
              
                  const editarTareaModal = new bootstrap.Modal(document.getElementById('modalEditarTarea'));
                  editarTareaModal.show();
                };
              
                const mostrarCrearTareaModal = async () => {
                  await cargarUsuariosEnSelect('crear-tarea-asignado-a');
              
                  const crearTareaModal = new bootstrap.Modal(document.getElementById('modalCrearTarea'));
                  crearTareaModal.show();
                };
              
                const obtenerUsuarios = async () => {
                  try {
                    const response = await fetch('/usuarios');
                    if (response.ok) {
                      return await response.json();
                    } else {
                      console.error('Error al obtener usuarios:', response.statusText);
                      return { data: [] };
                    }
                  } catch (error) {
                    console.error('Error al obtener usuarios:', error);
                    return { data: [] };
                  }
                };
              
                const cerrarModal = (modalId) => {
                  console.log(`Cerrando modal: ${modalId}`);
                  const modalElement = document.getElementById(modalId);
                  const modalInstance = bootstrap.Modal.getInstance(modalElement);
                  modalInstance.hide();
                  modalElement.addEventListener('hidden.bs.modal', () => {
                    console.log(`Modal cerrado: ${modalId}`);
                    document.body.classList.remove('modal-open');
                    document.querySelectorAll('.modal-backdrop').forEach(el => el.remove());
                  }, { once: true });
                };
              
                document.querySelector('[data-bs-target="#modalCrearTarea"]').addEventListener('click', mostrarCrearTareaModal);
              
                const botonCrearTarea = document.getElementById('botonCrearTarea');
                if (!botonCrearTarea.hasEventListener) {
                  botonCrearTarea.hasEventListener = true;
                  botonCrearTarea.addEventListener('click', (event) => {
                    event.preventDefault();
                    const nuevaTarea = {
                      nombre: document.getElementById('crear-tarea-nombre').value,
                      fechaVencimiento: document.getElementById('crear-tarea-fecha-vencimiento').value,
                      estado: document.getElementById('crear-tarea-estado').value,
                      usuarioId: document.getElementById('crear-tarea-asignado-a').value,
                      descripcion: document.getElementById('crear-tarea-descripcion').value
                    };
              
                    fetch('/tareas', {
                      method: 'POST',
                      headers: {
                        'Content-Type': 'application/json'
                      },
                      body: JSON.stringify(nuevaTarea)
                    })
                    .then(response => response.json())
                    .then(tarea => {
                      if (tarea) {
                        socket.emit('obtenerTareas');
                        cerrarModal('modalCrearTarea');
                      } else {
                        alert('Error al crear la tarea.');
                      }
                    })
                    .catch(error => {
                      console.error('Error al crear la tarea:', error);
                    });

                    <!-- mensaje para nuevas taraeas -->
                    const title = "Nueva tarea"
                    const message = nuevaTarea.nombre
                    fetch('/new-message', {
                      method: 'POST',
                      body: JSON.stringify({title: title,message: message}),
                      headers: {
                        'Content-Type': 'application/json'
                      }
                    }); 

                  });
                  
                }
              
                document.getElementById('guardarCambiosEditarTarea').addEventListener('click', () => {
                  const tareaId = document.getElementById('editar-tarea-id').value;
                  const tareaActualizada = {
                    nombre: document.getElementById('editar-tarea-nombre').value,
                    fechaVencimiento: document.getElementById('editar-tarea-fecha-vencimiento').value,
                    estado: document.getElementById('editar-tarea-estado').value,
                    usuarioId: document.getElementById('editar-tarea-asignado-a').value,
                    descripcion: document.getElementById('editar-tarea-descripcion').value
                  };
              
                  fetch(`/tareas/${tareaId}`, {
                    method: 'PUT',
                    headers: {
                      'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(tareaActualizada)
                  })
                  .then(response => {
                    if (response.ok) {
                      socket.emit('obtenerTareas');
                      cerrarModal('modalEditarTarea');
                    } else {
                      alert('Error al actualizar la tarea.');
                    }
                  })
                  .catch(error => {
                    console.error('Error al actualizar la tarea:', error);
                  });
                });
              
                document.getElementById('cancelarCrearTarea').addEventListener('click', () => {
                  const formCrearTarea = document.getElementById('formCrearTarea');
                  formCrearTarea.reset(); // Reinicia el formulario
                  cerrarModal('modalCrearTarea'); // Cierra el modal correctamente
                });
              
                const limpiarListasTareas = () => {
                  ['atrasada', 'hoy', 'semana', 'mes'].forEach(pestana => {
                    document.getElementById(`lista-tareas-${pestana}`).innerHTML = '';
                  });
                };
              
                const renderizarTareas = (tareas) => {
                  limpiarListasTareas();
                  tareas.forEach(tarea => {
                    renderizarTarea(tarea);
                  });
                };
              
                socket.on('connect', () => {
                  console.log('Conectado al servidor con ID:', socket.id);
                });
              
                socket.on('disconnect', () => {
                  console.log('Desconectado del servidor');
                });
              
                socket.on('tareaCreada', (tarea) => {
                  if (!usuarioSeleccionado || usuarioSeleccionado === tarea.usuarioId) {
                    renderizarTarea(tarea);
                  }
                });
                
                socket.on('tareaActualizada', (tarea) => {
                  if (!usuarioSeleccionado || usuarioSeleccionado === tarea.usuarioId) {
                    fetch('/tareas')
                      .then(response => response.json())
                      .then(tareas => {
                        renderizarTareas(tareas);
                      })
                      .catch(error => {
                        console.error('Error al cargar las tareas:', error);
                      });
                  }
                });
              
                socket.on('tareaEliminada', (tarea) => {
                  if (!usuarioSeleccionado || usuarioSeleccionado === tarea.usuarioId) {
                    fetch('/tareas')
                      .then(response => response.json())
                      .then(tareas => {
                        renderizarTareas(tareas);
                      })
                      .catch(error => {
                        console.error('Error al cargar las tareas:', error);
                      });
                  }
                });
              
              // Escuchar otros eventos segÃºn sea necesario
              socket.on('joinedRoom', (message) => {
                  console.log(message);
              });
              
              socket.on('tareas', (tasks) => {
                  console.log('Tareas recibidas:', tasks);
                  // AquÃ­ puedes agregar la lÃ³gica para mostrar las tareas en tu interfaz de usuario
              });
              
              socket.on('citas', (appointments) => {
                  console.log('Citas recibidas:', appointments);
                  // AquÃ­ puedes agregar la lÃ³gica para mostrar las citas en tu interfaz de usuario
              });
        
              //

                // Inicialmente cargar las tareas desde el servidor
                fetch('/tareas')
                  .then(response => response.json())
                  .then(tareas => {
                    renderizarTareas(tareas);
                  })
                  .catch(error => {
                    console.error('Error al cargar las tareas:', error);
                  });

              });
              
            </script> 

            <!-- [ Fin SecciÃ³n de tareas ] -->


            <!-- [ SecciÃ³n de Citas ] -->



            <!-- [ Fin SecciÃ³n de Citas ] -->

            <!-- [ SecciÃ³n de eventos ] -->
            <div class="col-lg-12">
              <div class="card shadow-sm">
                <div class="card-body pb-0">
                  <!-- Encabezado con opciones de filtro dropdown -->
                  <div class="d-flex justify-content-between align-items-center mb-3">
                    <h5 class="mb-0">GestiÃ³n de Eventos</h5>
                    <div class="dropdown">
                      <a class="btn btn-light dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        Filtrar Eventos
                      </a>
                      <div class="dropdown-menu dropdown-menu-end">
                        <a class="dropdown-item" href="#">Kanban</a>
                        <a class="dropdown-item" href="#">PrÃ³ximos</a>
                        <a class="dropdown-item" href="#">Hoy</a>
                        <a class="dropdown-item" href="#">Esta Semana</a>
                        <a class="dropdown-item" href="#">Este Mes</a>
                      </div>
                    </div>
                  </div>
                  <!-- PestaÃ±as para filtrar eventos -->
                  <ul class="nav nav-tabs analytics-tab" id="pestanasEventos" role="tablist">
                    <li class="nav-item" role="presentation">
                      <button class="nav-link active" id="pestanas-evento-kanban" data-bs-toggle="tab" data-bs-target="#contenido-evento-kanban" type="button" role="tab" aria-controls="contenido-evento-kanban" aria-selected="true">Kanban</button>
                    </li>
                    <li class="nav-item" role="presentation">
                      <button class="nav-link" id="pestanas-evento-proximos" data-bs-toggle="tab" data-bs-target="#contenido-evento-proximos" type="button" role="tab" aria-controls="contenido-evento-proximos" aria-selected="false">PrÃ³ximos</button>
                    </li>
                    <li class="nav-item" role="presentation">
                      <button class="nav-link" id="pestanas-evento-hoy" data-bs-toggle="tab" data-bs-target="#contenido-evento-hoy" type="button" role="tab" aria-controls="contenido-evento-hoy" aria-selected="false">Hoy</button>
                    </li>
                    <li class="nav-item" role="presentation">
                      <button class="nav-link" id="pestanas-evento-semana" data-bs-toggle="tab" data-bs-target="#contenido-evento-semana" type="button" role="tab" aria-controls="contenido-evento-semana" aria-selected="false">Esta Semana</button>
                    </li>
                    <li class="nav-item" role="presentation">
                      <button class="nav-link" id="pestanas-evento-mes" data-bs-toggle="tab" data-bs-target="#contenido-evento-mes" type="button" role="tab" aria-controls="contenido-evento-mes" aria-selected="false">Este Mes</button>
                    </li>
                  </ul>
                </div>
                <!-- Contenido de las pestaÃ±as -->
                <div class="tab-content p-3" id="contenidoEventos">
                  <div class="tab-pane fade show active" id="contenido-evento-kanban" role="tabpanel" aria-labelledby="pestanas-evento-kanban">
                    <!-- Contenido del Kanban de eventos -->
                    <div class="timeline-container">
                      <div class="timeline">
                        <!-- AquÃ­ se mostrarÃ¡n los eventos en formato de lÃ­nea de tiempo -->
                        <div class="timeline-item">
                          <div class="timeline-date">15 enero 2024</div>
                          <div class="timeline-content">
                            <input type="checkbox" class="event-checkbox">
                            <div class="event-details">
                              <h5>Evento 1</h5>
                              <p>DescripciÃ³n del evento 1</p>
                            </div>
                          </div>
                        </div>
                        <div class="timeline-item">
                          <div class="timeline-date">20 enero 2024</div>
                          <div class="timeline-content">
                            <input type="checkbox" class="event-checkbox">
                            <div class="event-details">
                              <h5>Evento 2</h5>
                              <p>DescripciÃ³n del evento 2</p>
                            </div>
                          </div>
                        </div>
                        <div class="timeline-item">
                          <div class="timeline-date">25 enero 2024</div>
                          <div class="timeline-content">
                            <input type="checkbox" class="event-checkbox">
                            <div class="event-details">
                              <h5>Evento 3</h5>
                              <p>DescripciÃ³n del evento 3</p>
                            </div>
                          </div>
                        </div>
                        <!-- MÃ¡s eventos aquÃ­ -->
                      </div>
                    </div>
                  </div>
                  <div class="tab-pane fade" id="contenido-evento-proximos" role="tabpanel" aria-labelledby="pestanas-evento-proximos">
                    <!-- Contenido de la pestaÃ±a PrÃ³ximos -->
                  </div>
                  <div class="tab-pane fade" id="contenido-evento-hoy" role="tabpanel" aria-labelledby="pestanas-evento-hoy">
                    <!-- Contenido de la pestaÃ±a Hoy -->
                  </div>
                  <div class="tab-pane fade" id="contenido-evento-semana" role="tabpanel" aria-labelledby="pestanas-evento-semana">
                    <!-- Contenido de la pestaÃ±a Esta Semana -->
                  </div>
                  <div class="tab-pane fade" id="contenido-evento-mes" role="tabpanel" aria-labelledby="pestanas-evento-mes">
                    <!-- Contenido de la pestaÃ±a Este Mes -->
                    <div id="calendar"></div> <!-- Contenedor del calendario -->
                  </div>
                </div>
                <!-- Pie de tarjeta para acciones -->
                <div class="card-footer text-end">
                  <!-- BotÃ³n para abrir el modal -->
                  <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addEventModal">
                    AÃ±adir Evento
                  </button>
                </div>
              </div>
            </div>

          
        </div>
        <!-- [ Main Content ] end -->
      </div>
    </div>
    <!-- [ Main Content ] end -->
    
    <!-- [Page Specific JS] start -->
    <script src="../assets/js/plugins/apexcharts.min.js"></script>
    <script src="../assets/js/pages/dashboard-default.js"></script>
    <!-- [Page Specific JS] end -->
    <!-- Required Js -->
    <script src="../assets/js/plugins/popper.min.js"></script>
    <script src="../assets/js/plugins/simplebar.min.js"></script>
    <script src="../assets/js/plugins/bootstrap.min.js"></script>
    <script src="../assets/js/fonts/custom-font.js"></script>
    <script src="../assets/js/pcoded.js"></script>
    <script src="../assets/js/plugins/feather.min.js"></script>
    <!-- Bootstrap JS -->
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/5.0.0/js/bootstrap.bundle.min.js"></script>
    
    
    
    
    <script>layout_change('dark');</script>
    <script>layout_theme_contrast_change('false');</script>
    <script>change_box_container('false');</script>
    <script>layout_caption_change('true');</script>
    <script>layout_rtl_change('false');</script>
    <script>preset_change("preset-9");</script>


      <!-- [Page Specific JS] start -->
  <!-- calender js -->
  <script src="../assets/js/plugins/index.global.min.js"></script>
  <!-- Sweet Alert -->
  <script src="../assets/js/plugins/sweetalert2.all.min.js"></script>
  <script src="../assets/js/pages/calendar.js"></script>
  <script src="../assets/js/form-handler.js"></script>
  <!-- [Page Specific JS] end -->

    
  </body>
  <!-- [Body] end -->
</html>
